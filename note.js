import firebase from 'firebase/compat/app';import 'firebase/compat/auth';import 'firebase/compat/firestore';const firebaseConfig = {  apiKey: "",  authDomain: "",  projectId: "",  storageBucket: "",  messagingSenderId: "",  appId: ""};const firebaseApp = firebase.initializeApp(firebaseConfig);const db = firebaseApp.firestore();const auth = firebase.auth();export { auth };export default db;

//app.js
import { useEffect } from 'react';import {  BrowserRouter as Router,  Routes,  Route,} from "react-router-dom";import HomeScreen from './components/HomeScreen';import LoginScreen from './components/LoginScreen';import { auth } from './firebase';import { useDispatch, useSelector } from 'react-redux';import { login, logout, selectUser } from './features/counter/userSlice';import ProfileScreen from './components/ProfileScreen';function App() {  const user = useSelector(selectUser);  const dispatch = useDispatch();  useEffect(() => {    const unsubscribe = auth.onAuthStateChanged(userAuth => {      if(userAuth) {        dispatch(login({          uid: userAuth.uid,          email: userAuth.email,        }));      } else {        dispatch(logout());      }    });    // cleanup    
return unsubscribe;  }, [dispatch]);  return (    <div className="app">      <Router>        {          !user ? (            <LoginScreen />          ) : (            <Routes>              <Route exact path='/' element = {<HomeScreen />} />              <Route path = '/profile' element = {<ProfileScreen />} />            </Routes>          )        }      </Router>    </div>  );}export default App;
//user.slice
import { createSlice } from '@reduxjs/toolkit';export const userSlice = createSlice({  name: 'user',  initialState: {    user: null,  },  reducers: {    login: (state, action) => {      state.user = action.payload;    },    logout: (state) => {      state.user = null;    }  },});export const { login, logout } = userSlice.actions;export const selectUser = (state) => state.user.user;export default userSlice.reducer;

//axios.js
import axios from 'axios';const instance = axios.create({    baseURL: "https://api.themoviedb.org/3"}) 
export default instance;

//banner.js
const API_KEY = "your-API-key";const requests = {    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,};export default requests;


//row.js
import axios from "../axios";import { useEffect, useState } from "react";const Row = ({ title, fetchURL, isLargeRow = false }) => {   const [movies, setMovies] = useState([]);   const BASE_URL = "https://image.tmdb.org/t/p/original/";   useEffect(() => {    async function fetchData() {        const request = await axios.get(fetchURL);        setMovies(request.data.results);        return request;    }    fetchData();   }, [fetchURL]);  return (    <div className='row'>        <h2>{ title }</h2>        <div className="row-posters">            {movies.map((movie) => (                (isLargeRow && movie.poster_path) ||                (!isLargeRow && movie.backdrop_path)) && (                    <img key={movie.id}                        className = {`row-poster ${isLargeRow && 'row-posterL'}`}                        src={`${BASE_URL}${                            isLargeRow ? movie.poster_path : movie.backdrop_path                        }`}                        alt = {movie.name}                     />                )            )}        </div>    </div>  )}
export default Row;

//profile
import React from 'react'import { useSelector } from 'react-redux'import { selectUser } from '../features/counter/userSlice'import { auth } from '../firebase'import Nav from './Nav'const ProfileScreen = () => {  const user = useSelector(selectUser);  return (    <div className='profileScreen'>        <Nav />        <div className='profile-body'>            <h1>Your Profile</h1>            <div className='profile-info'>               
 <img   src='https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png'                     alt='avatar'                 />
                 <div className='profile-details'>                  <h2>{user.email}</h2>                  <div className='profile-plan'>                    <h3>Premium 4K + HDR</h3>                    <button                       className='profile-signOut'                      onClick={() => auth.signOut()}                    >                        Sign Out                    </button>                  </div>                </div>            </div>        </div>    </div>  )}export default ProfileScreen;


//singup
import React, { useRef } from 'react'import { auth } from '../firebase';const SignUpScreen = () => {  const emailRef = useRef(null);  const passwordRef = useRef(null);  const register = (e) => {    e.preventDefault();    auth.createUserWithEmailAndPassword(      emailRef.current.value,      passwordRef.current.value    ).then((authUser) => {      console.log(authUser)    }).catch((err) => {      alert(err.message);    });  };  const signIn = (e) => {    e.preventDefault();    auth.signInWithEmailAndPassword(      emailRef.current.value,      passwordRef.current.value    ).then((authUser) => {      console.log(authUser)    }).catch((err) => {      alert(err.message)    });  };    return (    <div className='signUp'>        <form>          <h1>Sign In</h1>          <input             type="email"            placeholder='Email address'            ref={emailRef}          />          <input             placeholder='Password'            type="password"            ref={passwordRef}          />          <button             type='submit'            onClick={signIn}          >            Sign In          </button>          <h4>            <span className='signUp-gray'>New to Netflix? </span>            <span className='signUp-link' onClick={register}>Sign Up now.</span>          </h4>        </form>    </div>  )}
export default SignUpScreen;

//LOGIN
import { useState } from 'react'import SignUpScreen from './SignUpScreen';import logo from '../img/login-screen-logo.png'const LoginScreen = () => {    const [signIn, setSignIn] = useState(false);  return (    <div className='loginScreen'>        <div className='login-bg'>            <img                 className='login-logo'                src={logo}                alt='login-screen-logo'             />            <button                 className='login-btn'                onClick={() => setSignIn(true)}            >                Sign In            </button>            <div className='login-gradient' />        </div>        <div className='login-body'>            {signIn ? (                <SignUpScreen />            ) : (               <>                <h1>Unlimited movies, TV shows and more.</h1>                <h2>Watch anywhere. Cancel anytime.</h2>                <h3>Ready to watch? Enter your email to create or restart your membership.</h3>                <div className='login-input'>                    <form>                        <input                             type='email'                             placeholder='Email address'                        />                        <button                             className='login-getStarted'                            onClick={() => setSignIn(true)}                        >                            {`Get Started >`}                         </button>                    </form>                </div>               </>            )}        </div>    </div>  )}export default LoginScreen;

//nav
import { useState } from 'react'import SignUpScreen from './SignUpScreen';import logo from '../img/login-screen-logo.png'const LoginScreen = () => {    const [signIn, setSignIn] = useState(false);  return (    <div className='loginScreen'>        <div className='login-bg'>            <img                 className='login-logo'                src={logo}                alt='login-screen-logo'             />            <button                 className='login-btn'                onClick={() => setSignIn(true)}            >                Sign In            </button>            <div className='login-gradient' />        </div>        <div className='login-body'>            {signIn ? (                <SignUpScreen />            ) : (               <>                <h1>Unlimited movies, TV shows and more.</h1>                <h2>Watch anywhere. Cancel anytime.</h2>                <h3>Ready to watch? Enter your email to create or restart your membership.</h3>                <div className='login-input'>                    <form>                        <input                             type='email'                             placeholder='Email address'                        />                        <button                             className='login-getStarted'                            onClick={() => setSignIn(true)}                        >                            {`Get Started >`}                         </button>                    </form>                </div>               </>            )}        </div>    </div>  )}export default LoginScreen;

npm i -g firebase-toolsnpm run buildfirebase loginfirebase initfirebase deploy